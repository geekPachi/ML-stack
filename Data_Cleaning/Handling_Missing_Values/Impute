# if data columns contains any missing values then, we can impute some values into that empty cells


Step 0: how can i know that my dataset contains empty values without looking dataset ?
    For that, 
       after importing the dataset, simply enter following code, 
              
              dataset.isnull().sum()  -   this will shows the empty cells that each column contains.
      
      

1. for numerical empty values - mean, median, mode
 
 from sklearn.impute import SimpleImputer
 imputer = SimpleImputer(strategy='mean')  // we can use strategy as median/ mode.
 
 df['column-name'] = imputer.fit_transform(df[['column-name']])    // column that contains empty cells
 
 
 2. using fillna method
   
  df['column_name'] =  df['column_name'].fillna(df['column_name'].mean(), inplace=True) 
  
  
  3. for object type empty cells
    frequent_object = df['Date'].mode()[0]
    df['Date'].fillna(frequent_object, inplace=True)
    
    
  4. Regression Method
  
  import pandas as pd

# Split the data into two sets: one with complete cases and one with missing values
complete_cases = df.dropna()
missing_cases = df[df['Y'].isnull()]

# Prepare the independent variable (X) and dependent variable (Y) for regression
X_train = complete_cases[['X']]
Y_train = complete_cases['Y']
X_test = missing_cases[['X']]

# Create a regression model and fit it on the complete cases
regression_model = LinearRegression()
regression_model.fit(X_train, Y_train)

# Predict the missing values using the regression model
imputed_values = regression_model.predict(X_test)

# Replace the missing values in the original dataframe with the imputed values
df.loc[df['Y'].isnull(), 'Y'] = imputed_values

print(df)




