Winsorization 
It involves capping or clipping extreme values at a certain percentile. 
This approach replaces the outliers with values from a specified percentile.


import pandas as pd
import numpy as np
from scipy.stats import mstats

# Create a sample dataframe with outliers
data = {
    'X': [1, 2, 3, 4, 10, 20, 30, 40, 100]
}
df = pd.DataFrame(data)

# Apply winsorization to cap extreme values at the 90th percentile
df['X_winsorized'] = mstats.winsorize(df['X'], limits=[0, 0.1])

print(df)


Transformation:
Apply a transformation to the data that reduces the impact of outliers. For example, you can take the logarithm or 
square root of skewed variables to make the distribution more symmetric.

import pandas as pd
import numpy as np

# Create a sample dataframe with a skewed variable
data = {
    'X': [1, 2, 3, 4, 10, 20, 30, 40, 100]
}
df = pd.DataFrame(data)

# Apply logarithmic transformation to reduce skewness
df['X_log'] = np.log(df['X'])

print(df)
